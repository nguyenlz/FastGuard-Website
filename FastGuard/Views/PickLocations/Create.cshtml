@model PickLocation

@{
    ViewData["Title"] = "Tạo Điểm Đón";
}

<h1>Tạo Điểm Đón</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" onsubmit="return validatePickLocationForm(event)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="PickLocationName" class="control-label">Điểm Đón</label>
                <input asp-for="PickLocationName" class="form-control" id="PickLocationNameInput" />
                <span asp-validation-for="PickLocationName" class="text-danger"></span>
                <span class="error" id="PickLocationNameError" style="color: red; display: none;">Nhập dữ liệu</span>
            </div>
            <div class="form-group">
                <label asp-for="LocationId" class="control-label">Tên Thành Phố</label>
                <select asp-for="LocationId" class ="form-control" asp-items="ViewBag.LocationName"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Tạo Điểm Đón" class="btn btn-primary" /> |
                <a asp-action="Index" class="btn btn-info">Trở Về</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>

        function validatePickLocationForm(event) {
            var PickLocationNameInput = document.getElementById('PickLocationNameInput');
            var PickLocationNameError = document.getElementById('PickLocationNameError');

            if (PickLocationNameInput.value === '') {
                event.preventDefault();
                PickLocationNameError.style.display = 'block';
                return false;
            } else {
                PickLocationNameError.style.display = 'none';
            }
        }
    </script>
}
