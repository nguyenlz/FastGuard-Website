@using Microsoft.AspNetCore.Identity;
@using Newtonsoft.Json;
@inject SignInManager<ApplicationUser> signInManager;
@model Route
@{
	var picklocations1 = ViewData["PickLocationId1"] as SelectList;
	var picklocations2 = ViewData["PickLocationId2"] as SelectList;
}

<style>
	.error {
		color: red;
		display: none;
		font-size: 20px;
		margin-top: 10px;
	}

	#payError.active {
		display: block;
	}

	#payError {
		display: none;
	}

	.checkout-container {
		font-size: 20px;
		display: flex;
		justify-content: space-between;
		gap: 50px;
		width: 100%;
		padding: 10px 100px;
		/* overflow-y: scroll;
						height: 90vh; */
	}

	.checkout-container-left, .checkout-container-right {
		display: flex;
		flex-direction: column;
		gap: 20px;
	}

	.checkout-container-right {
		width: 40%;
	}

	.label-bold {
		font-weight: bold;
	}

	.text-grayy {
		color: #8c8c8c;
	}

	.text-violet {
		color: #8e2de2;
	}

	.choose-seat, .pick-info, .customer-info, .pay-info, .price-info, .route-info {
		border: 1px solid #d9d9d9;
		border-radius: 10px;
		padding: 10px 10px;
	}

	.route-info-row {
		display: flex;
		justify-content: space-between;
	}

	::selection {
		color: #fff;
		background: #4285f4;
	}

	.location-wrapper {
		display: flex;
		flex-direction: column;
	}

		.location-wrapper .error {
			color: red;
			display: none;
			margin-top: 10px;
		}

	.wrapper {
		width: 270px;
	}

	.select-btn, li {
		display: flex;
		align-items: center;
		cursor: pointer;
	}

	.customer-info input {
		height: 45px;
		padding: 0 5px;
		border-radius: 7px;
		width: 400px;
		border: 1px solid #8e2de2;
	}

		.customer-info input:focus {
			outline: 2px solid #8e2de2;
		}

	.select-btn {
		height: 45px;
		padding: 0 5px;
		border-radius: 7px;
		justify-content: space-between;
		border: 1px solid #8e2de2;
	}

		.select-btn input {
			border: none;
			background-color: transparent;
			cursor: pointer;
		}

			.select-btn input:focus {
				outline: none;
			}

		.select-btn i {
			color: #8e2de2;
			transition: transform 0.3s linear;
		}

	.wrapper.active .select-btn i {
		transform: rotate(-180deg);
	}

	.custom-content {
		display: none;
		padding: 20px;
		margin-top: 15px;
		border-radius: 7px;
		position: absolute;
		z-index: 100;
		border: 1px solid #8e2de2;
		background-color: #f3e9fc;
		width: 270px;
	}

	.wrapper.active .custom-content {
		display: block;
	}

	.custom-content .search {
		position: relative;
	}

	.search i {
		top: 50%;
		left: 15px;
		color: #8e2de2;
		pointer-events: none;
		transform: translateY(-50%);
		position: absolute;
	}

	.search input {
		height: 50px;
		width: 100%;
		outline: none;
		border-radius: 5px;
		padding: 0 20px 0 43px;
		border: 1px solid #4a00e0;
	}

		.search input:focus {
			padding-left: 42px;
			border: 2px solid #8e2de2;
		}

		.search input::placeholder {
			color: #bfbfbf;
		}

	.custom-content .options {
		margin-top: 10px;
		max-height: 250px;
		overflow-y: auto;
		padding-right: 7px;
	}

	.options::-webkit-scrollbar {
		width: 7px;
	}

	.options::-webkit-scrollbar-track {
		background: #f1f1f1;
		border-radius: 25px;
	}

	.options::-webkit-scrollbar-thumb {
		background: #ccc;
		border-radius: 25px;
	}

		.options::-webkit-scrollbar-thumb:hover {
			background: #b3b3b3;
		}

	.options li {
		/* height: 50px; */
		padding: 5px 13px;
	}

		.options li:hover, li.selected {
			border-radius: 5px;
			background: #dbbcf6;
		}

	.choose-seat-tren, .choose-seat-duoi {
		display: flex;
		flex-direction: column;
		gap: 5px;
		font-size: 30px;
	}

	.seat-row, .seat-last-row {
		display: flex;
		gap: 50px;
		color: #80ccff;
		margin: 5px 0;
	}

	.seat-last-row {
		display: flex;
		gap: 24.5px;
		color: #80ccff;
		margin: 5px 0;
	}

		.seat-row i, .seat-last-row i {
			cursor: pointer;
		}

			.seat-row i.active, .seat-last-row i.active {
				color: #8e2de2;
			}

			.seat-row i.bookedSeat, .seat-last-row i.bookedSeat, .bookedSeat {
				color: #808080;
				cursor: not-allowed;
			}

	.pay-button, .cancel-button {
		background: linear-gradient(90deg, rgba(142,45,226,1) 32%, rgba(74,0,224,1) 100%);
		font-size: 21px;
		border-radius: 25px;
		color: white;
		padding: 5px 10px;
		width: 160px;
		text-align: center;
		border: 1px solid transparent;
	}

	.cancel-button {
		background: white;
		color: #8e2de2;
		border-color: #4a00e0;
		border: 1px solid;
		text-decoration: none;
		width: 160px;
		padding: 5px 60px;
	}

		.cancel-button:hover {
			background: linear-gradient(90deg, rgba(142,45,226,1) 32%, rgba(74,0,224,1) 100%);
			color: white;
		}
</style>
<form class="checkout-container" action="/Tickets/PayResult" method="get" onsubmit="handleSubmit(event)">
	<div class="checkout-container-left">
		<div class="choose-seat">
			<div class="d-flex justify-content-between mb-3">
				<div class="label-bold">Chọn ghế</div>
				<div class="d-flex gap-3 align-items-center">
					<i class="fa-solid fa-square" style="color: #808080;"></i>Đã bán
					<i class="fa-solid fa-square" style="color: #80ccff;"></i>Còn trống
					<i class="fa-solid fa-square" style="color: #8e2de2;"></i>Đang chọn
				</div>
			</div>
			<div class="d-flex justify-content-center text-center gap-5">
				<div class="choose-seat-tren">
					<div style="font-size: 20px;">Tầng dưới</div>
					<div class="seat-row">
						<i class="fa-solid fa-tablet" id="A01" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A02" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A03" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-row">
						<i class="fa-solid fa-tablet" id="A04" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A05" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A06" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-row">
						<i class="fa-solid fa-tablet" id="A07" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A08" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A09" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-row">
						<i class="fa-solid fa-tablet" id="A10" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A11" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A12" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-row">
						<i class="fa-solid fa-tablet" id="A13" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A14" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A15" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-row justify-content-between">
						<i class="fa-solid fa-tablet" id="A16" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A17" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-last-row">
						<i class="fa-solid fa-tablet" id="A18" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A19" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A20" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="A21" onclick="toggleSeat(this)"></i>
					</div>

				</div>
				<div class="choose-seat-duoi">
					<div style="font-size: 20px;">Tầng trên</div>
					<div class="seat-row">
						<i class="fa-solid fa-tablet" id="B01" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B02" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B03" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-row">
						<i class="fa-solid fa-tablet" id="B04" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B05" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B06" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-row">
						<i class="fa-solid fa-tablet" id="B07" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B08" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B09" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-row">
						<i class="fa-solid fa-tablet" id="B10" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B11" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B12" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-row">
						<i class="fa-solid fa-tablet" id="B13" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B14" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B15" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-row justify-content-between">
						<i class="fa-solid fa-tablet" id="B16" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B17" onclick="toggleSeat(this)"></i>
					</div>
					<div class="seat-last-row">
						<i class="fa-solid fa-tablet" id="B18" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B19" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B20" onclick="toggleSeat(this)"></i>
						<i class="fa-solid fa-tablet" id="B21" onclick="toggleSeat(this)"></i>
					</div>
				</div>
			</div>


		</div>
		<div class="pick-info">
			<div class="label-bold">Thông tin đón trả</div>
			<div class="d-flex justify-content-between gap-3">
				<div class="location-wrapper">
					<label>ĐIỂM ĐÓN</label>
					<div class="wrapper" id="startlocation">
						<div class="select-btn">
							<input type="text" value="" id="startid" name="startid" style="display: none;" />
							<input type="text" value="Chọn điểm đón" id="start-input" readonly name="start" />
							<i class="fa-solid fa-angle-down"></i>
						</div>
						<div class="custom-content">
							<div class="search">
								<i class="fa-solid fa-magnifying-glass"></i>
								<input spellcheck="false" type="text" placeholder="Tìm kiếm">
							</div>
							<ul class="options"></ul>
						</div>
					</div>
					<span class="error" id="errorStart">Chọn điểm đón</span>
				</div>
				@* @Html.DropDownList("PickLocationId1", ViewData["PickLocationId1"] as SelectList, "Chọn Pick Location") *@
				<div class="location-wrapper">
					<label>ĐIỂM TRẢ</label>
					<div class="wrapper" id="endlocation">
						<div class="select-btn">
							<input type="text" id="endid" name="endid" style="display: none;" />
							<input type="text" value="Chọn điểm trả" readonly id="end-input" name="end"></input>
							<i class="fa-solid fa-angle-down"></i>
						</div>
						<div class="custom-content">
							<div class="search">
								<i class="fa-solid fa-magnifying-glass"></i>
								<input spellcheck="false" type="text" placeholder="Tìm kiếm">
							</div>
							<ul class="options"></ul>
						</div>
					</div>
					<span class="error" id="errorEnd">Chọn điểm trả</span>
				</div>
			</div>
		</div>
		@if (signInManager.IsSignedIn(User) && User.IsInRole("Customer"))
		{
			<div class="customer-info">
				<div class="label-bold">Thông tin khách hàng</div>
				<div>Họ và tên</div>
				<input type="text" placeholder="Họ và Tên" value="@ViewBag.Name" name="cusname" title="Vui lòng nhập họ và tên" required />
				<div>Số điện thoại</div>
				<input type="text" placeholder="Số điện thoại" value="@ViewBag.Phone" name="cusphone" id="cusphone" pattern="[0-9]+" title="Vui lòng nhập số điện thoại" required>
				<div>Email</div>
				<input type="text" placeholder="Email" value="@ViewBag.Email" name="cusemail" readonly style="background: #f2f2f2;" />
			</div>
		}
		else
		{
			<div class="customer-info">
				<div class="label-bold">Thông tin khách hàng</div>
				<div>Họ và tên</div>
				<input type="text" placeholder="Họ và Tên" value="" name="cusname" title="Vui lòng nhập họ và tên" required />
				<div>Số điện thoại</div>
				<input type="text" placeholder="Số điện thoại" value="" name="cusphone" id="cusphone" pattern="[0-9]+" title="Vui lòng nhập số điện thoại" required>
				<div>Email</div>
				<input type="text" placeholder="Email" value="" name="cusemail" id="cusemail" required/>
				<div class="error" id="errorFindCus">Không tìm thấy khách hàng, hãy nhập thông tin khách hàng để tạo mới</div>
			</div>
		}

		<div class="pay-info d-flex justify-content-between align-items-center">
			<div id="totalpay" class="fw-bold">0đ</div>
			<input type="text" style="display: none;" id="priceInput" name="price" />
			<div>
				<a class="cancel-button" href="/Tickets/Tickets?startid=@Model.LocationId1&start=@ViewData["start"]&endid=@Model.LocationId2&end=@ViewData["end"]&startdate=@Model.StartDate.ToString("yyyy-MM-dd")">Hủy</a>
				<button class="pay-button" type="submit">Thanh toán</button>
				<div style="display: none;" id="selectedSeats"></div>
				<input type="text" style="display: none;" id="totalPayInput" name="routeid" value="@Model.RouteId" />
			</div>
		</div>
		<div class="alert alert-danger" role="alert" id="payError">
		</div>
	</div>
	<div class="checkout-container-right">
		<div class="route-info">
			<div class="label-bold">Thông tin lượt đi</div>
			<div class="route-info-row">
				<span class="text-grayy">Tuyến xe</span>
				<div class="d-flex justify-content-center align-items-center gap-2">
					<div>@ViewData["start"]</div>
					<i class="fa-solid fa-circle-arrow-right"></i>
					<div>@ViewData["end"]</div>
				</div>
			</div>
			<div class="route-info-row">
				<span class="text-grayy">Thời gian</span>
				@Model.StartDate
			</div>
			<div class="route-info-row">
				<span class="text-grayy">Số lượng ghế</span>
				<span id="soluongghe">0 Ghế</span>
			</div>
			<div class="route-info-row">
				<span class="text-grayy">Số ghế</span>
				<span id="soghe"></span>
			</div>
		</div>
		<div class="price-info">
			<div class="label-bold">Chi tiết giá</div>
			<div class="route-info-row">
				<span class="text-grayy">Giá vé</span>
				<span id="temp-tongtien" class="text-violet">0đ</span>
			</div>
			<div class="route-info-row">
				<span class="text-grayy">Giảm giá</span>
				0đ
			</div>
			<hr />
			<div class="route-info-row">
				<span class="text-grayy">Tổng tiền</span>
				<span id="tongtien" class="text-violet">0đ</span>
			</div>
		</div>
	</div>

</form>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
	$(document).ready(function () {
		$('#cusemail').on('blur', function () {
			var email = $(this).val();
			loadCustomerInfo(email);
		});
		$('input[name="cusname"], input[name="cusphone"]').on('input', function () {
			var cusname = $('input[name="cusname"]').val();
			var cusphone = $('input[name="cusphone"]').val();

			if (cusname !== '' && cusphone !== '') {
				$("#errorFindCus").removeClass("error").css("display", "none");
			} else {
				$("#errorFindCus").addClass("error").css("display", "block");
			}
		});
			
	});

	function loadCustomerInfo(email) {
		$.ajax({
			url: '/Customers/GetCustomerInfo',
			type: 'GET',
			data: { email: email },
			success: function (result) {
				if (result.success) {
					$('input[name="cusname"]').val(result.name);
					$('input[name="cusphone"]').val(result.phone);
				} else {
					$("#errorFindCus").addClass("error").css("display", "block");
					$('input[name="cusname"]').val('');
					$('input[name="cusphone"]').val('');
				}
			},
			error: function () {
				// Xử lý khi có lỗi xảy ra trong quá trình gửi yêu cầu
			}
		});
	}

	const wrapper2 = document.querySelector("#startlocation"),
		selectBtn2 = wrapper2.querySelector(".select-btn"),
		searchInp2 = wrapper2.querySelector(".custom-content input"),
		options2 = wrapper2.querySelector(".options");

	var countries = @Html.Raw(JsonConvert.SerializeObject(picklocations1));
	// console.log('pick', countries);
	// Tạo mảng startlocations từ dữ liệu Model
	// let countries = modelData.map(item => ({ id: item.LocationId, name: item.LocationName }));

	function addCountry2(selectedCountry) {
		options2.innerHTML = "";
		countries.forEach(country => {
			let isSelected = country.Text == selectedCountry ? "selected" : "";
			let li = `<li onclick="updateName2(this)" class="${isSelected}" id="${country.Value}">${country.Text}</li>`;
			options2.insertAdjacentHTML("beforeend", li);
		});
	}
	addCountry2();

	function updateName2(selectedLi) {
		searchInp2.value = "";
		addCountry2(selectedLi.innerText);
		wrapper2.classList.remove("active");
		selectBtn2.querySelector("#start-input").value = selectedLi.innerText;
		selectBtn2.querySelector("#startid").value = selectedLi.id;

	}

	searchInp2.addEventListener("keyup", () => {
		let arr = [];
		let searchWord = searchInp2.value.toLowerCase();
		arr = countries.filter(data => {
			return data.Text.toLowerCase().includes(searchWord);
		}).map(data => {
			let isSelected = data.Text == selectBtn2.firstElementChild.innerText ? "selected" : "";
			return `<li onclick="updateName2(this)" class="${isSelected}" id="${data.Value}">${data.Text}</li>`;
		}).join("");
		options2.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Không tìm thấy địa điểm này!</p>`;
	});


	selectBtn2.addEventListener("click", () => wrapper2.classList.toggle("active"));

	const wrapper = document.querySelector("#endlocation"),
		selectBtn = wrapper.querySelector(".select-btn"),
		searchInp = wrapper.querySelector(".custom-content input"),
		options = wrapper.querySelector(".options");

	var countries = @Html.Raw(JsonConvert.SerializeObject(picklocations2));


	function addCountry(selectedCountry) {
		options.innerHTML = "";
		countries.forEach(country => {
			let isSelected = country.Text == selectedCountry ? "selected" : "";
			let li = `<li onclick="updateName(this)" class="${isSelected}" id="${country.Value}">${country.Text}</li>`;
			options.insertAdjacentHTML("beforeend", li);
		});
	}
	addCountry();

	function updateName(selectedLi) {
		searchInp.value = "";
		addCountry(selectedLi.innerText);
		wrapper.classList.remove("active");
		selectBtn.querySelector("#end-input").value = selectedLi.innerText;
		selectBtn.querySelector("#endid").value = selectedLi.id;
	}

	searchInp.addEventListener("keyup", () => {
		let arr = [];
		let searchWord = searchInp.value.toLowerCase();
		arr = countries.filter(data => {
			return data.Text.toLowerCase().includes(searchWord);
		}).map(data => {
			let isSelected = data.Text == selectBtn.firstElementChild.innerText ? "selected" : "";
			return `<li onclick="updateName(this)" class="${isSelected}" id="${data.Value}">${data.Text}</li>`;
		}).join("");
		options.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Không tìm thấy địa điểm này!</p>`;
	});

	selectBtn.addEventListener("click", () => wrapper.classList.toggle("active"));

	var seats = @Html.Raw(JsonConvert.SerializeObject(ViewData["SeatNo"]));
	console.log('seats', seats);

	function loadSeat() {
		seats.forEach((seat) => {
			const seatElement = document.querySelector("#" + seat.Value);
			seatElement.classList.add("bookedSeat");
		});
	}
	loadSeat();

	var selectedSeats = []
	function toggleSeat(seat) {
		if (seat.classList.contains("bookedSeat")) {
			return; // Không làm gì nếu ghế đã có class "bookedSeat"
		}
		seat.classList.toggle("active");
		const seatId = seat.id;
		const soghe = document.querySelector("#soghe");
		const soluongghe = document.querySelector("#soluongghe");
		const tongtien = document.querySelector("#tongtien");
		const temptongtien = document.querySelector("#temp-tongtien");
		const totalpay = document.querySelector("#totalpay");
		const priceInput = document.querySelector("#priceInput");

		if (selectedSeats.includes(seatId)) {
			selectedSeats = selectedSeats.filter(id => id !== seatId);
		} else {
			selectedSeats.push(seatId);
		}
		soluongghe.innerText = selectedSeats.length + " Ghế";
		tongtien.innerText = (selectedSeats.length * @Model.Price) + "đ";
		temptongtien.innerText = (selectedSeats.length * @Model.Price) + "đ";
		totalpay.innerText = (selectedSeats.length * @Model.Price) + "đ";
		priceInput.value = (@Model.Price);

		soghe.innerText = selectedSeats.join(", ");
	}
	function handleSubmit(event) {
		event.preventDefault();

		const payError = document.querySelector("#payError");
		const startInput = document.querySelector('#start-input');
		const endInput = document.querySelector('#end-input');

		console.log('startinput', startInput.value);


		if (selectedSeats.length == 0) {
			payError.innerText = "Vui lòng chọn ghế!";
			payError.classList.add("active");
		} else if (startInput.value === 'Chọn điểm đón') {
			payError.innerText = "Chọn điểm đón!";
			payError.classList.add("active");
		} else if (endInput.value === 'Chọn điểm trả') {
			payError.innerText = "Chọn điểm trả!";
			payError.classList.add("active");
		} else {
			var div = document.getElementById('selectedSeats');
			for (var i = 0; i < selectedSeats.length; i++) {
				var input = document.createElement('input');
				input.type = 'text';
				input.name = 'selectedSeats[' + i + ']';
				input.value = selectedSeats[i];
				div.appendChild(input);
			}
			payError.classList.remove("active");
			localStorage.setItem('seats', JSON.stringify(selectedSeats));
			event.target.submit();
		}
	}

</script>